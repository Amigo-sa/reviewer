Содержание директории database:

- файл clear_collections.py служит для очищения БД
- файл contest.py содержит скрипт, добавляющий папку src в sys.path для возможности работы тестов с моделью БД
- файл sample_data.py содержит скрипт, заполняющий базу осмысленными данными, и предназначен для подготовки базы к отработке фронт-энда
- файл test_validation.py содержит тесты правил валидации БД. Тесты работают напрямую с базой, без участия node сервера.

Содержание директории api:
- файл contest.py содержит скрипт, добавляющий папку src в sys.path для возможности работы тестов с моделью БД и node сервером
- файл test_api.py содержит тесты api node сервера. При подготовках тестов сервер запускается, после тестов - останавливается.

Используемые файлы:
- файл /src/data/reviewer_model.py содержит структуру базы, описанную в виде набора классов pymodm. При импорте этого файла инициируется подключение к базе
- файл /src/data/settings.py содержит имя базы, адрес и порт для подключения

Для работы скриптов необходимо установить:
- MongoDB;
- желательно иметь набор инструментов для MongoDB, позволяющий смотреть данные в базе;
- IDE для Python (например, Spyder);
- пакеты pymongo и pymodm для питона.

Порядок запуска скрипта заполнения БД sample_data:
0. Убедиться, что MongoDB запущена.
1. Открыть и запустить в Spyder файл sample_data.py.
2. Убедиться в отсутствии ошибок в консоли Spyder.
Убедиться в том, что значения в коллекции были добавлены при помощи Robo 3T (правый клик на любой из коллекций -> view documents).
Также информация из базы после заполнения будет выведена в консоль.
