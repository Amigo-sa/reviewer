###
Скрипт sample_local.py
Заполняет базу бессмысленными, но корректно связанными по id значениями.
Настройки скрипта находятся непосредственно в скрипте, в начале.

to_fill - словарь, содержащий количество записей, которое необходимо добавить в каждую коллекцию.
	Ключи словаря должны совпадать с именем коллекции в БД.

validate_after_fill - флаг, определяющий предложение валидировать добавленные записи методом clear
	модели pymodm. Если флаг установлен, в конце заполнения скрипт потребует от пользователя ввести
	любой символ для проведения валидации, либо ничего для пропуска её.
	
diverse - список полей, которые хотелось бы видеть наиболее разнообразным. Служит для настройки алгоритма
	распределения значений для документов с индексом вида (ссылка+ссылка+ссылка). В данный момент принцип
	работы алгоритма следующий:
		например, нужно добавить 10 person, 10 department, 10 specialization. Т.к. комбинация из этих
		трёх значений не должна повторяться, очевидно, что можно добавить максимум 1000
 		person_specializaton (при попытке добавить больше исключение вызвается сразу же).
		Если же требуется добавить всего 5 person_specializaton, они будут распределены так:
			person_id	department_id	specialization_id
			0		0		0
			2		0		0
			4		0		0
			6		0		0
			8		0		0
		т.к. максимум 1000 вариантов, инкремент составляет 1000/5=200.
		Значения в таблице относительные, при добавлении в базу они прибавляются к стартовым _id
		соответствующих коллекций.
	Если "person_id" имеется в списке diverse, а остальных полей там нет, person_id в вышеприведённой
	таблице будет гарантированно первым, и получит больше разнообразия.
	Для обхода этой "фичи" алгоритма распределения рекомендуется выбирать "некруглое" количество
	элементов для коллекций. Например, если в вышеприведённом примере запросить заполнение 
	11 department и 11 specialization, инкремент составит  1210/5=242, что приведёт к изменению всех 
	трёх значений при каждом следующем значении person_specialization.
###